// Given two strings s and t which consist of only lowercase letters.
//
// String t is generated by random shuffling string s and then add one more letter at a random position.
//
// Find the letter that was added in t.
//
// Example:
//
// Input:
// s = "abcd"
// t = "abcde"
//
// Output:
// e
//
// Explanation:
// 'e' is the letter that was added.


class Solution {
    public char findTheDifference(String s, String t) {

        // return mytry(s, t);

        // return mytry2(s, t);

        // return mytry2_2(s, t);

        return mytry2_3(s, t);
    }

    private char mytry2_3(String s, String t) {
        char result = t.charAt(t.length() - 1); // set last char of t as default
        for (int i = 0; i < s.length(); i++) {
            result ^= s.charAt(i);
            result ^= t.charAt(i);
        }
        return result;
    }

    private char mytry2_2(String s, String t) {
        char result = 0;
        for (char c : s.toCharArray()) {
            result ^= c;
        }
        for (char c : t.toCharArray()) {
            result ^= c;
        }
        return result;
    }

    private char mytry2(String s, String t) {
        int result = 0;
        for (char c : s.toCharArray()) {
            result ^= (c - 'a');
        }
        for (char c : t.toCharArray()) {
            result ^= (c - 'a');
        }
        return (char) (result + 'a');
    }

    private char mytry(String s, String t) {
        // brute force: use HashSet: O(max{N, M}) time and O(26) space
        int[] nums = new int[26];
        for (char c : s.toCharArray()) {
            nums[c - 'a']++;
        }
        for (char c : t.toCharArray()) {
            nums[c - 'a']--;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] < 0) {
                return (char) ('a' + i);
            }
        }
        return 'a';
    }
}
